// –û—Ç—Ä–∏–º—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ
let stressData = JSON.parse(localStorage.getItem("stressData")) || [];

// DOM –µ–ª–µ–º–µ–Ω—Ç–∏
const stressValue = document.getElementById("stressValue");
const historyList = document.getElementById("historyList");
const modal = document.getElementById("testModal");
const questionText = document.getElementById("questionText");
const answers = document.querySelectorAll(".answer");

// –ü–∏—Ç–∞–Ω–Ω—è
const questions = [
  "–ß–∏ –≤—ñ–¥—á—É–≤–∞—î—à —Ç–∏ –Ω–∞–ø—Ä—É–∂–µ–Ω–Ω—è —Å—å–æ–≥–æ–¥–Ω—ñ?",
  "–ß–∏ –±—É–ª–æ —Å–∫–ª–∞–¥–Ω–æ –∑–æ—Å–µ—Ä–µ–¥–∏—Ç–∏—Å—è?",
  "–ß–∏ –ø–æ–≥–∞–Ω–æ —Ç–∏ —Å–ø–∞–≤(-–ª–∞) –º–∏–Ω—É–ª–æ—ó –Ω–æ—á—ñ?",
  "–ß–∏ –±—É–≤(-–ª–∞) —Ç–∏ —Ä–æ–∑–¥—Ä–∞—Ç–æ–≤–∞–Ω–∏–º(-–æ—é)?",
  "–ß–∏ –≤—ñ–¥—á—É–≤–∞—î—à –≤—Ç–æ–º—É –±–µ–∑ –ø—Ä–∏—á–∏–Ω–∏?"
];

let score = 0;
let currentQuestion = 0;

// === –§—É–Ω–∫—Ü—ñ—ó ===

// –û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–∑–≤—É –¥–Ω—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
function getDayName(date) {
  const days = ['–ù–¥', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];
  return days[date.getDay()];
}

// –í–∏–±—Ä–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤
function getLast7DaysData() {
  const today = new Date();
  const result = [];

  for (let i = 6; i >= 0; i--) {
    const d = new Date();
    d.setDate(today.getDate() - i);
    const dateStr = d.toLocaleDateString('uk-UA');

    const record = stressData.find(item => item.date === dateStr);
    result.push(record ? record.value : null);
  }

  return result;
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∞—Ñ—ñ–∫–∞
const ctx = document.getElementById('stressChart');
const chart = new Chart(ctx, {
  type: 'line',
  data: {
    labels: ['–ü–Ω','–í—Ç','–°—Ä','–ß—Ç','–ü—Ç','–°–±','–ù–¥'],
    datasets: [{
      label: '–†—ñ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—É',
      data: getLast7DaysData(),
      borderColor: '#f39c12',
      backgroundColor: 'rgba(243,156,18,0.2)',
      fill: true,
      tension: 0.3
    }]
  },
  options: {
    scales: {
      y: { min: 0, max: 10 }
    }
  }
});

// –û–Ω–æ–≤–∏—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫
function updateChart() {
  chart.data.datasets[0].data = getLast7DaysData();
  chart.update();
  localStorage.setItem("stressData", JSON.stringify(stressData));
}

// –û–Ω–æ–≤–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é
function updateHistory() {
  historyList.innerHTML = "";
  stressData.slice(-7).reverse().forEach(item => {
    const li = document.createElement("li");
    li.textContent = `${item.date} (${getDayName(new Date(item.date))}): ${item.value}/10`;
    historyList.appendChild(li);
  });
}

// –ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç
document.getElementById("startTest").addEventListener("click", () => {
  score = 0;
  currentQuestion = 0;
  questionText.innerText = questions[currentQuestion];
  modal.classList.remove("hidden");
});

// –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å —É —Ç–µ—Å—Ç—ñ
answers.forEach(btn => {
  btn.addEventListener("click", () => {
    score += Number(btn.dataset.value);
    currentQuestion++;

    if (currentQuestion < questions.length) {
      questionText.innerText = questions[currentQuestion];
    } else {
      modal.classList.add("hidden");
      finishTest();
    }
  });
});

// –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–µ—Å—Ç—É
function finishTest() {
  const stressLevel = Math.round((score / (questions.length * 2)) * 10);
  const today = new Date();
  const dateStr = today.toLocaleDateString('uk-UA');

  stressValue.innerText = `${stressLevel}/10`;

  // –ó–±–µ—Ä–µ–≥—Ç–∏ (–æ–Ω–æ–≤–∏—Ç–∏, —è–∫—â–æ —Å—å–æ–≥–æ–¥–Ω—ñ –≤–∂–µ —î –∑–∞–ø–∏—Å)
  const existing = stressData.find(item => item.date === dateStr);
  if (existing) existing.value = stressLevel;
  else stressData.push({ date: dateStr, value: stressLevel });

  updateChart();
  updateHistory();

  // üí° –ü–æ—Ä–∞–¥–∞ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
  let tip = "";
  if (stressLevel <= 3) tip = "–ß—É–¥–æ–≤–æ! –ü—Ä–æ–¥–æ–≤–∂—É–π —É —Ç–æ–º—É –∂ –¥—É—Å—ñ üåû";
  else if (stressLevel <= 6) tip = "–°–ø—Ä–æ–±—É–π –ø—Ä–æ–≥—É–ª—è–Ω–∫—É –∞–±–æ –º—É–∑–∏–∫—É –¥–ª—è —Ä–æ–∑—Å–ª–∞–±–ª–µ–Ω–Ω—è üåø";
  else tip = "–¢–≤—ñ–π —Ä—ñ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—É –≤–∏—Å–æ–∫–∏–π üòü. –ó—Ä–æ–±–∏ –ø–∞—É–∑—É –π –ø–æ–¥–∏—Ö–∞–π –≥–ª–∏–±—à–µ üßò";

  setTimeout(() => alert(tip), 300);
}

// –ü—Ä–∏ –∑–∞–ø—É—Å–∫—É –æ–Ω–æ–≤–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
updateChart();
updateHistory();

// === –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ===
const reminder = document.getElementById("reminder");
const reminderBtn = document.getElementById("reminderBtn");
const closeReminder = document.getElementById("closeReminder");

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É –∑ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
reminderBtn.addEventListener("click", () => {
  reminder.classList.add("hidden");
  document.getElementById("startTest").click();
});

// –ó–∞–∫—Ä–∏—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
closeReminder.addEventListener("click", () => {
  reminder.classList.add("hidden");
});

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∞—Å—É (–∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥)
setInterval(() => {
  const now = new Date();
  const hours = now.getHours();
  const minutes = now.getMinutes();

  // –ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –æ 20:00, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–≤ —Ç–µ—Å—Ç —Å—å–æ–≥–æ–¥–Ω—ñ
  const today = new Date().toLocaleDateString('uk-UA');
  const alreadyDone = stressData.some(item => item.date === today);

  if (hours === 20 && minutes === 0 && !alreadyDone) {
    reminder.classList.remove("hidden");
  }
}, 30000); // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥


// –î–æ–∑–≤—ñ–ª –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
if (Notification.permission !== "granted") {
    Notification.requestPermission();
  }
  
  function showNotification() {
    if (Notification.permission === "granted") {
      new Notification("–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è üåø", {
        body: "–ß–∞—Å –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ —Ä—ñ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—É!",
        icon: "https://cdn-icons-png.flaticon.com/512/733/733585.png"
      });
    }
  }
  
  // –í–∏–∫–ª–∏–∫ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –æ–¥–Ω–æ—á–∞—Å–Ω–æ –∑ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è–º
  if (hours === 20 && minutes === 0 && !alreadyDone) {
    reminder.classList.remove("hidden");
    showNotification();
  }
  